---
description: These rules cover interactions with the Mobile Rich Media Ad Interface Definition (MRAID).  Follow them to ensure your playable ad functions correctly inside ad webviews.  Categories clarify when to apply each point.  ## Always apply  - **Wait for readiness:** Do not start your game or modify the DOM   until `window.mraid` exists and `mraid.getState()` is not   "loading".  Listen for the `mraid.ready` event if necessary. - **Use MRAID for navigation:** Call `mraid.open("https://example.com")` or   `mraid.openStoreURL()` for the call‑to‑action.  Never assign   `location.href` or use `<a>` tags to navigate away. - **Respect viewability:** Pause animations and audio when the ad   becomes non‑viewable (`viewableChange` event) and resume when it   becomes viewable again. - **HTTPS only:** All URLs in your creative (including the CTA) must   start with `https://`.  ## Apply intelligently  - **Dynamic sizing:** Use `mraid.getMaxSize()` to determine the   maximum available ad space and scale your canvas or game   accordingly.  For simple games, use CSS to set width and height   percentages. - **State management:** Listen for `stateChange` events.  If the   state becomes "hidden", stop timers and animations; restart when   it returns to "default" or "expanded".  ## Apply to specific files  - **`main.js`:** Wrap MRAID checks and listeners in a function   (`initWithMraid()`) and call it when MRAID is present.  Provide a   fallback (`initNoMraid()`) for local preview where MRAID is   unavailable. - **`index.html`:** Include `<script src="mraid.js"></script>` in   your HTML.  The host app will supply this file; do not bundle it   yourself.  ## Apply manually  - **Testing:** Use a web tester (e.g. a vendor’s MRAID tester) to   validate your creative in a simulated mobile environment.  Test   both portrait and landscape orientations and all states (default,   expanded, hidden). - **Updates:** When MRAID specifications evolve, revisit these rules   and update them accordingly.  Refer to the official IAB and   vendor documentation for the latest requirements.# MRAID Compliance  These rules cover interactions with the Mobile Rich Media Ad Interface Definition (MRAID).  Follow them to ensure your playable ad functions correctly inside ad webviews.  Categories clarify when to apply each point.
alwaysApply: false
---
## Always apply

- **Wait for readiness:** Do not start your game or modify the DOM
  until `window.mraid` exists and `mraid.getState()` is not
  "loading".  Listen for the `mraid.ready` event if necessary.
- **Use MRAID for navigation:** Call `mraid.open("https://example.com")` or
  `mraid.openStoreURL()` for the call‑to‑action.  Never assign
  `location.href` or use `<a>` tags to navigate away.
- **Respect viewability:** Pause animations and audio when the ad
  becomes non‑viewable (`viewableChange` event) and resume when it
  becomes viewable again.
- **HTTPS only:** All URLs in your creative (including the CTA) must
  start with `https://`.

## Apply intelligently

- **Dynamic sizing:** Use `mraid.getMaxSize()` to determine the
  maximum available ad space and scale your canvas or game
  accordingly.  For simple games, use CSS to set width and height
  percentages.
- **State management:** Listen for `stateChange` events.  If the
  state becomes "hidden", stop timers and animations; restart when
  it returns to "default" or "expanded".

## Apply to specific files

- **`main.js`:** Wrap MRAID checks and listeners in a function
  (`initWithMraid()`) and call it when MRAID is present.  Provide a
  fallback (`initNoMraid()`) for local preview where MRAID is
  unavailable.
- **`index.html`:** Include `<script src="mraid.js"></script>` in
  your HTML.  The host app will supply this file; do not bundle it
  yourself.

## Apply manually

- **Testing:** Use a web tester (e.g. a vendor’s MRAID tester) to
  validate your creative in a simulated mobile environment.  Test
  both portrait and landscape orientations and all states (default,
  expanded, hidden).
- **Updates:** When MRAID specifications evolve, revisit these rules
  and update them accordingly.  Refer to the official IAB and
  vendor documentation for the latest requirements.